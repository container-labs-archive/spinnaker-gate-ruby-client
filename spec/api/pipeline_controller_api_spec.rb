=begin
#Spinnaker API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PipelineControllerApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PipelineControllerApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PipelineControllerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PipelineControllerApi' do
    it 'should create an instance of PipelineControllerApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PipelineControllerApi)
    end
  end

  # unit tests for cancel_pipeline_using_put1
  # Cancel a pipeline execution
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :reason reason
  # @option opts [BOOLEAN] :force force
  # @return [nil]
  describe 'cancel_pipeline_using_put1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_pipeline_using_delete
  # Delete a pipeline definition
  # @param application application
  # @param pipeline_name pipelineName
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_pipeline_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_pipeline_using_delete1
  # Delete a pipeline execution
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'delete_pipeline_using_delete1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for evaluate_expression_for_execution_using_delete
  # Evaluate a pipeline expression using the provided execution as context
  # @param id id
  # @param expression expression
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'evaluate_expression_for_execution_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for evaluate_expression_for_execution_using_get
  # Evaluate a pipeline expression using the provided execution as context
  # @param id id
  # @param expression expression
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'evaluate_expression_for_execution_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for evaluate_expression_for_execution_using_head
  # Evaluate a pipeline expression using the provided execution as context
  # @param id id
  # @param expression expression
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'evaluate_expression_for_execution_using_head test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for evaluate_expression_for_execution_using_options
  # Evaluate a pipeline expression using the provided execution as context
  # @param id id
  # @param expression expression
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'evaluate_expression_for_execution_using_options test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for evaluate_expression_for_execution_using_patch
  # Evaluate a pipeline expression using the provided execution as context
  # @param id id
  # @param expression expression
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'evaluate_expression_for_execution_using_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for evaluate_expression_for_execution_using_put
  # Evaluate a pipeline expression using the provided execution as context
  # @param id id
  # @param expression expression
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'evaluate_expression_for_execution_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for evaluate_expression_for_execution_via_post_using_post1
  # Evaluate a pipeline expression using the provided execution as context
  # @param id id
  # @param pipeline_expression pipelineExpression
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'evaluate_expression_for_execution_via_post_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_logs_using_get
  # Retrieve pipeline execution logs
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [Array<Object>]
  describe 'get_pipeline_logs_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_using_get
  # Retrieve a pipeline execution
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_pipeline_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invoke_pipeline_config_using_post1
  # Trigger a pipeline execution
  # @param application application
  # @param pipeline_name_or_id pipelineNameOrId
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :trigger trigger
  # @return [HttpEntity]
  describe 'invoke_pipeline_config_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invoke_pipeline_config_via_echo_using_post
  # Trigger a pipeline execution
  # @param application application
  # @param pipeline_name_or_id pipelineNameOrId
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :trigger trigger
  # @return [HttpEntity]
  describe 'invoke_pipeline_config_via_echo_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pause_pipeline_using_put
  # Pause a pipeline execution
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'pause_pipeline_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for rename_pipeline_using_post
  # Rename a pipeline definition
  # @param rename_command renameCommand
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'rename_pipeline_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restart_stage_using_put
  # Restart a stage execution
  # @param id id
  # @param stage_id stageId
  # @param context context
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'restart_stage_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resume_pipeline_using_put
  # Resume a pipeline execution
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'resume_pipeline_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_pipeline_using_post
  # Save a pipeline definition
  # @param pipeline pipeline
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'save_pipeline_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for start_using_post
  # Initiate a pipeline execution
  # @param map map
  # @param [Hash] opts the optional parameters
  # @return [ResponseEntity]
  describe 'start_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_pipeline_using_put
  # Update a pipeline definition
  # @param id id
  # @param pipeline pipeline
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'update_pipeline_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_stage_using_patch
  # Update a stage execution
  # @param id id
  # @param stage_id stageId
  # @param context context
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'update_stage_using_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
