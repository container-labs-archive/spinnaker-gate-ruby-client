=begin
#Spinnaker API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'uri'

module SwaggerClient
  class ArtifactControllerApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve the list of artifact accounts configured in Clouddriver.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_rate_limit_app X-RateLimit-App
    # @return [Array<Object>]
    def all_using_get(opts = {})
      data, _status_code, _headers = all_using_get_with_http_info(opts)
      data
    end

    # Retrieve the list of artifact accounts configured in Clouddriver.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_rate_limit_app X-RateLimit-App
    # @return [Array<(Array<Object>, Fixnum, Hash)>] Array<Object> data, response status code and response headers
    def all_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ArtifactControllerApi.all_using_get ...'
      end
      # resource path
      local_var_path = '/artifacts/credentials'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-RateLimit-App'] = opts[:'x_rate_limit_app'] if !opts[:'x_rate_limit_app'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ArtifactControllerApi#all_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve the list of artifact versions by account and artifact names
    # @param account_name accountName
    # @param type type
    # @param artifact_name artifactName
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_rate_limit_app X-RateLimit-App
    # @return [Array<String>]
    def artifact_versions_using_get(account_name, type, artifact_name, opts = {})
      data, _status_code, _headers = artifact_versions_using_get_with_http_info(account_name, type, artifact_name, opts)
      data
    end

    # Retrieve the list of artifact versions by account and artifact names
    # @param account_name accountName
    # @param type type
    # @param artifact_name artifactName
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_rate_limit_app X-RateLimit-App
    # @return [Array<(Array<String>, Fixnum, Hash)>] Array<String> data, response status code and response headers
    def artifact_versions_using_get_with_http_info(account_name, type, artifact_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ArtifactControllerApi.artifact_versions_using_get ...'
      end
      # verify the required parameter 'account_name' is set
      if @api_client.config.client_side_validation && account_name.nil?
        fail ArgumentError, "Missing the required parameter 'account_name' when calling ArtifactControllerApi.artifact_versions_using_get"
      end
      # verify the required parameter 'type' is set
      if @api_client.config.client_side_validation && type.nil?
        fail ArgumentError, "Missing the required parameter 'type' when calling ArtifactControllerApi.artifact_versions_using_get"
      end
      # verify the required parameter 'artifact_name' is set
      if @api_client.config.client_side_validation && artifact_name.nil?
        fail ArgumentError, "Missing the required parameter 'artifact_name' when calling ArtifactControllerApi.artifact_versions_using_get"
      end
      # resource path
      local_var_path = '/artifacts/account/{accountName}/versions'.sub('{' + 'accountName' + '}', account_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'type'] = type
      query_params[:'artifactName'] = artifact_name

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-RateLimit-App'] = opts[:'x_rate_limit_app'] if !opts[:'x_rate_limit_app'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<String>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ArtifactControllerApi#artifact_versions_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
